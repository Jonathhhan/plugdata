#N canvas 827 239 583 688 12;
#N canvas 0 50 450 250 (subpatch) 0;
#X array array1 100 float 0;
#X coords 0 1 99 -1 197 96 1;
#X restore 20 243 graph;
#X obj 21 400 array get array1;
#X obj 21 347 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X listbox 399 234 23 0 0 0 my_list my_list-r my_list-s 12;
#X obj 305 6 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 5 pd;
#X obj 368 11 cnv 10 10 10 empty empty PlugData 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 24 42 cnv 4 4 4 empty empty Storing\ extra\ data\ in\ DAW\ session 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 4 cnv 15 301 42 empty empty daw_storage 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 4 5 graph;
#X obj 21 424 daw_storage array1;
#X obj 21 449 array set array1;
#X obj 428 291 daw_storage my_list;
#X text 348 204 Example 2 : storing a list;
#X text 18 203 Example 1 : storing an array;
#X text 18 111 In certain circumstances \, [param] objects are not sufficient to store in DAW session some extra data of the patch \, that aren't numbers., f 73;
#X obj 5 544 cnv 3 550 4 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 129 555 cnv 17 4 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 5 483 cnv 3 550 4 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 129 494 cnv 17 4 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 595 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X text 175 493 float \, symbol or list - extra data to be stored;
#X text 178 512 new values overwrite previous ones;
#X text 174 554 float \, symbol or list - receive extradata from DAW;
#X text 157 604 1) symbol - name of the xml-tag under which the extra data will be internally stored in the DAW session data., f 55;
#X text 54 344 <- manually dump array content into the plugdata temporary struct. Those data will be stored in the DAW when you save the DAW session., f 68;
#X text 18 149 [daw_storage] objects enable storage of arrays \, lists \, symbols \, as extradata lists in the DAW session., f 64;
#N canvas 0 0 432 113 reserved_send/receive_names 0;
#X obj 19 40 r load;
#X obj 117 40 s extrabuffer;
#X text 83 39 and;
#X text 19 12 For communication with the daw \, following;
#X text 234 40 are reserved names.;
#X restore 9 646 pd reserved_send/receive_names;
#N canvas 952 332 450 300 forbidden_characters_in_argument 0;
#X text 9 21 Due to the way data are internally stored within the DAW session (using xml-tags) \, some characters are forbidden for naming the tag \, i.e. argument of the abstraction;
#X text 11 94 Indeed \, XML Tag names cannot contain any of the characters :!"#$%&'()*+ \, / \; <=>?@[]^`|~ \, nor a space character \, and cannot begin with "-" \, "." \, or a numeric digit.;
#X text 20 179 If you fill argument with invalid name \, the abstraction [daw_storage] won't work.;
#X restore 293 648 pd forbidden_characters_in_argument;
#X obj 23 89 daw_storage tag;
#N canvas 648 540 450 300 advanced 0;
#X text 16 35 Use [text tolist] and [text fromlist] to save / retrieve content of a text object;
#X text 14 8 Storing contents from a [text define] object :;
#X restore 266 423 pd advanced : storing contents from a [text define] object;
#X f 40;
#X obj 428 261 r my_list-s;
#X obj 428 316 s my_list-r;
#X text 72 378 NOTE : You should instead flush this data as soon as it changes., f 66;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 10 0 11 0;
#X connect 12 0 32 0;
#X connect 31 0 12 0;
